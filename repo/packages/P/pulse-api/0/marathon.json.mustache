{
    "id":"{{service.name}}-api",
    "instances": {{ servicestack.count }},
    "cpus": {{ servicestack.cpus }},
    "mem": {{ servicestack.mem }},
    "container": {
        "type": "DOCKER",
        "docker": {
          "image": "{{ service.docker_repo }}/pulseinc.pulse.endpoints.servicestack:{{ servicestack.version }}",
          "network": "BRIDGE",
          "forcePullImage": true,
          "portMappings": [
            { "hostPort": 0, "containerPort": 80, "servicePort": 0 }
          ]
        }
    },
    "uris": [
        "file:///etc/docker.tar.gz"
    ],
    "env": {
        "PULSE_VERSION": "0.1.0",
        "NSERVICEBUS_LICENSE": "{{ servicestack.license }}",
        "PULSE_CONFIG": "{{ servicestack.config }}",

        "FRAMEWORK_NAME": "{{service.name}}-api"

    },
  "healthChecks": [
    {
      "path": "/health",
      "protocol": "HTTP",
      "gracePeriodSeconds": 30,
      "intervalSeconds": 10,
      "timeoutSeconds": 20,
      "maxConsecutiveFailures": 3,
      "ignoreHttp1xx": false,
      "portIndex": 0
    }
  ],
    "labels": {
        "DCOS_PACKAGE_FRAMEWORK_NAME": "{{service.name}}-api",
        "DCOS_SERVICE_NAME": "{{service.name}}-api",
        "DCOS_SERVICE_SCHEME": "http",
        "DCOS_SERVICE_PORT_INDEX": "0",
        "HAPROXY_GROUP": "external",
        "HAPROXY_DEPLOYMENT_GROUP": "{{service.name}}",
        "HAPROXY_0_VHOST": "{{service.vhost}}",
        "HAPROXY_0_BACKEND_HTTP_HEALTHCHECK_OPTIONS": "  option  httpchk GET {healthCheckPath} HTTP/1.1\\r\\nHost:\\ www\n  timeout check {healthCheckTimeoutSeconds}s\n"
    },
    "upgradeStrategy": {
        "minimumHealthCapacity": 0,
        "maximumOverCapacity": 0
    }
}
